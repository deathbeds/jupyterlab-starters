name: CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - '*'
  workflow_dispatch:

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

env:
  PYTHONIOENCODING: utf-8
  PYTHONUNBUFFERED: '1'
  PIP_DISABLE_PIP_VERSION_CHECK: '1'
  # our stuff
  SKIP_JLPM_IF_CACHED: '1'
  CACHE_EPOCH: '4'
  ATEST_RETRIES: '3'
  DIST_NAME: jupyter-starters-${{ github.run_number }}-dist

defaults:
  run:
    shell: bash -l {0}

jobs:
  lint:
    runs-on: ${{ matrix.os }}-latest
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu]
    env:
      LOCKFILE: .github/locks/build-linux-64-3.11.conda.lock
      SKIP_JLPM_IF_CACHED: '0'
    steps:
      - name: git checkout
        uses: actions/checkout@v3

      - name: cache (node_modules)
        uses: actions/cache@v3
        with:
          path: node_modules
          key: |
            ${{ env.CACHE_EPOCH }}-node_modules-${{ runner.os }}-${{ hashFiles('yarn.lock', '.yarnrc') }}

      - name: base env (conda)
        uses: conda-incubator/setup-miniconda@v2
        with:
          environment-file: ${{ env.LOCKFILE }}
          miniforge-variant: Mambaforge
          use-mamba: true

      - name: lint
        run: doit -n8 integrity lint || doit list --all --status

      - name: lint (again)
        run: doit integrity lint

      - name: Rename uncached conda packages
        shell: bash
        run: mv "${CONDA_PKGS_DIR}" "${CONDA_PKGS_DIR}_do_not_cache"

  build:
    runs-on: ${{ matrix.os }}-latest
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu]
    env:
      LOCKFILE: .github/locks/build-linux-64-3.11.conda.lock
    steps:
      - name: git checkout
        uses: actions/checkout@v3

      - name: cache (node_modules)
        uses: actions/cache@v3
        with:
          path: node_modules
          key: |
            ${{ env.CACHE_EPOCH }}-node_modules-${{ runner.os }}-${{ hashFiles('yarn.lock', '.yarnrc') }}

      - name: base env (conda)
        uses: conda-incubator/setup-miniconda@v2
        with:
          environment-file: ${{ env.LOCKFILE }}
          miniforge-variant: Mambaforge
          use-mamba: true

      - name: build
        run: doit -n8 dist || doit list --all --status

      - name: build (again)
        run: doit dist

      - name: publish (dists)
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.DIST_NAME }}
          path: ./dist

      - name: Rename uncached conda packages
        shell: bash
        run: mv "${CONDA_PKGS_DIR}" "${CONDA_PKGS_DIR}_do_not_cache"

  docs:
    needs: [build]
    runs-on: ubuntu-latest
    env:
      DOCS_IN_CI: 1
      LOCKFILE: .github/locks/docs-linux-64-3.11.conda.lock
    steps:
      - name: git checkout
        uses: actions/checkout@v3

      - name: cache (node_modules)
        uses: actions/cache@v3
        with:
          path: node_modules
          key: |
            ${{ env.CACHE_EPOCH }}-node_modules-${{ runner.os }}-${{ hashFiles('yarn.lock', '.yarnrc') }}

      - name: base env (conda)
        uses: conda-incubator/setup-miniconda@v2
        with:
          environment-file: ${{ env.LOCKFILE }}
          miniforge-variant: Mambaforge
          use-mamba: true

      - name: download (dists)
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.DIST_NAME }}
          path: ./dist

      - name: docs/test
        run: doit -n8 test docs || doit list --all --status

      - name: docs/test (again)
        run: doit test docs

      - name: publish (reports)
        if: ${{ always() }}
        uses: actions/upload-artifact@v3
        with:
          name: |
            jupyter-starters reports linux-64 3.11 ${{ github.run_number }}
          path: |
            build/atest
            build/coverage
            build/utest

      - name: publish (docs)
        uses: actions/upload-artifact@v3
        with:
          name: |
            jupyter-starters-${{ github.run_number }}-docs
          path: |
            build/docs/html

      - name: Rename uncached conda packages
        shell: bash
        run: mv "${CONDA_PKGS_DIR}" "${CONDA_PKGS_DIR}_do_not_cache"

  test:
    needs: [build]
    runs-on: ${{ matrix.os }}-latest
    env:
      TEST_IN_CI: 1
      LOCKFILE: .github/locks/atest-${{ matrix.subdir }}-${{ matrix.py }}.conda.lock
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu, macos, windows]
        py: ['3.8', '3.11']
        include:
          - os: ubuntu
            subdir: linux-64
          - os: macos
            subdir: osx-64
          - os: windows
            subdir: win-64
        exclude:
          - os: ubuntu
            py: '3.11'
    steps:
      - name: git checkout
        uses: actions/checkout@v3

      - name: base env (conda)
        uses: conda-incubator/setup-miniconda@v2
        with:
          environment-file: ${{ env.LOCKFILE }}
          miniforge-variant: Mambaforge
          use-mamba: true

      - name: download (dists)
        uses: actions/download-artifact@v3
        with:
          name: jupyter-starters-dist-${{ github.run_number }}
          path: ./dist

      - name: docs/test (unix)
        if: ${{ matrix.os != 'windows' }}
        run: |
          set -eux
          ls dist
          doit test

      - name: docs/test (win)
        if: ${{ matrix.os == 'windows' }}
        shell: cmd /C CALL {0}
        run: |
          @echo on
          dir dist
          python --version
          doit test || exit 1

      - name: publish (reports)
        if: ${{ always() }}
        uses: actions/upload-artifact@v3
        with:
          name: |
            jupyter-starters reports ${{ matrix.os }} ${{ matrix.py }} ${{ github.run_number }}
          path: |
            build/atest
            build/coverage
            build/utest

      - name: Rename uncached conda packages
        shell: bash
        run: mv "${CONDA_PKGS_DIR}" "${CONDA_PKGS_DIR}_do_not_cache"
